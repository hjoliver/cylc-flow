# Change queue limit by reload and check number of running tasks to confirm
# that the new limit is being applied. This test is potentially flaky because
# it checks task status using the "cylc suite-state" DB command, and DB task
# states (like the datastore too) only get updated once per main loop.

[scheduling]
    [[ queues ]]
        [[[ q1 ]]]
            limit = 5 # marker
            members = reloader, FAM
    [[graph]]
        R1 = """reloader:start => FAM
                   reloader => monitor"""
[runtime]
    [[FAM]]
        script = sleep 10
    [[a,b,c,d,e,f,g,h,i,j,k,l]]
        inherit = FAM
    [[reloader]]
        script = """
# change the limit from 5 to 3:
perl -pi -e 's/(limit = )5( # marker)/\1 3 \2/' $CYLC_SUITE_RUN_DIR/flow.cylc
# reload:
cylc reload "${CYLC_SUITE_NAME}"
cylc__job__poll_grep_suite_log 'Reload completed'
"""
    [[monitor]]
        script = """
        wait
        while true; do
            RUNNING=$(cylc suite-state $CYLC_SUITE_NAME -S running | wc -l)
            # Should be max of: monitor plus 3 members of q1
            if ((RUNNING > 4)); then
                break
            fi
            sleep 1
            SUCCEEDED=$(cylc suite-state $CYLC_SUITE_NAME -S succeeded | wc -l)
            if ((SUCCEEDED==13)); then
                break
            fi
            sleep 1
        done
        if ((RUNNING > 4)); then
            false
        else
            true
        fi
"""
